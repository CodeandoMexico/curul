# encoding: utf-8

LEGISLATURA_LXII_IDS = ['9215604','9216717','9218123','9216838','9216796','9217355','9218131','9217753','9217396','9215812','9217028','9216464',
 '9216029','9217184','9216679','9217860','9216201','9215848','9218119','9216741','9216067','9217417','9216595','9216477',
 '9217217','9216787','9217040','9217246','9215762','9216725','9216500','9217322','9216621','9216021','9217220','9216930',
 '9217690','9216609','9216294','9218163','9215730','9218153','9216619','9216880','9216588','9215846','9216002','9216045',
 '9216037','9217580','9218133','9218155','9216095','9218178','9216113','9216923','9218183','9216489','9216629','9216235',
 '9216890','9216556','9216466','9216097','9216631','9217060','9216526','9216435','9216378','9217866','9217023','9216713',
 '9216832','9218240','9217257','9216441','9217283','9217295','9216147','9218173','9218109','9217328','9216794','9216061',
 '9218145','9217206','9217578','9216611','9217127','9216635','9216431','9216107','9216625','9216322','9218139','9217618',
 '9216053','9215712','9218171','9216453','9218221','9215714','9218099','9216585','9216952','9217822','9216759','9217308',
 '9216344','9216027','9216604','9216810','9218238','9216041','9216729','9216583','9216388','9218193','9216254','9217648',
 '9217103','9217280','9216783','9216639','9216416','9216862','9216840','9216763','9216551','9217593','9216324','9217097',
 '9218149','9217833','9217991','9215877','9216687','9216059','9216033','9215692','9217561','9216808','9216493','9216354',
 '9217565','9215732','9217130','9215700','9216515','9217145','9217155','9215963','9216905','9216437','9216747','9216298',
 '9217212','9216115','9216380','9218209','9217230','9216065','9215871','9216486','9216592','9216814','9216386','9215698',
 '9217304','9217749','9217017','9216599','9216577','9216689','9216362','9215818','9216791','9216864','9216685','9216161',
 '9215915','9216193','9216886','9217573','9217957','9217302','9217576','9218012','9216842','9217216','9216785','9215624',
 '9216450','9217363','9215718','9216087','9215626','9217065','9217371','9216143','9218213','9216633','9215606','9217250',
 '9216711','9217735','9217409','9216119','9216129','9218151','9216888','9216775','9217326','9216089','9217415','9216023',
 '9217318','9216159','9216015','9215782','9215678','9217464','9216149','9217713','9216213','9216177','9215622','9216151',
 '9216533','9215905','9216338','9216352','9216127','9216013','9216121','9215965','9218107','9216412','9216641','9217191',
 '9216425','9216248','9215879','9216427','9218201','9217729','9217244','9215602','9216535','9216707','9216227','9217430',
 '9217959','9216806','9217142','9216049','9215913','9218113','9216482','9216390','9216733','9218135','9217702','9217238',
 '9215612','9215907','9216836','9216878','9216767','9216731','9215770','9217424','9216899','9216770','9216676','9217369',
 '9216077','9216472','9217999','9216063','9216189','9217765','9216897','9218165','9218199','9218211','9217842','9216773',
 '9216456','9216882','9217187','9216955','9216800','9216446','9218203','9216031','9216617','9217198','9216558','9217388',
 '9216448','9217290','9216523','9216834','9216856','9217419','9217109','9216943','9216342','9215710','9216199','9216421',
 '9217864','9216071','9216674','9215590','9216433','9216850','9217153','9218223','9217285','9216739','9218086','9216439',
 '9215706','9216757','9218197','9218127','9216233','9216580','9218143','9216069','9217840','9216039','9216382','9216921',
 '9217520','9217053','9218225','9215630','9216777','9217988','9215726','9217310','9218157','9217762','9218195','9217115',
 '9216969','9217030','9216681','9217113','9218161','9215776','9218097','9215724','9215919','9218187','9216244','9216017',
 '9218185','9217092','9217075','9215937','9216332','9217359','9218147','9218094','9215690','9217086','9216019','9216694',
 '9218137','9218115','9216075','9216959','9216539','9216961','9215911','9216225','9216567','9218159','9215656','9216462',
 '9218125','9217646','9217394','9216051','9218141','9217015','9216111','9216602','9216443','9217955','9217111','9217306',
 '9217300','9217413','9217422','9216392','9217094','9218117','9216141','9217390','9216549','9215696','9217292','9216091',
 '9217386','9216502','9216828','9216125','9217715','9216408','9217298','9216250','9218169','9218231','9216083','9217236',
 '9216372','9216573','9218205','9217392','9218191','9216547','9216025','9218105','9217222','9216938','9216946','9216047',
 '9217232','9217193','9217079','9216468','9216334','9216195','9218167','9216901','9216460','9218103','9218129','9216830',
 '9216368','9218219','9216484','9217972','9217228','9216928','9217761','9216237','9216563','9217660','9217967','9216866',
 '9216818','9217248','9216623','9216163','9216079','9217121','9217426','9216691','9216252','9216528','9217324','9218215',
 '9216721','9216652','9217163','9217558','9216683','9216366','9216364','9218207','9216376','9216007','9218176','9215736',
 '9216723','9218121','9217090','9216474','9215684','9217189','9216798','9216735','9216892','9215961','9217210','9217200',
 '9216055','9217134','9216093','9216458','9217287','9218236','9217020','9215887']

namespace :legislatura do
  desc "Legislatura LXII"
  task :LXII => [:environment] do
    Representative.transaction do
      legislatura = Legislature.find_by_name('Legislatura LXII')
      CSV.foreach('doc/legislatura_LXII.csv', :headers => true) do |diputado|
        region = Region.find_by_name(diputado['entidad'])
        partido = PoliticalParty.find_by_name(diputado['partido'])
        rep = Representative.create(
          name: "#{diputado['nombre']} #{diputado['apellidos']}",
          position: 'Diputado',
          region_id: region.id,
          biography: diputado['bio'],
          twitter: diputado['twitter'],
          political_party_id: partido.id,
          district: diputado['distrito'],
          phone: "#{diputado['telefono']} EXT. #{diputado['extension']}",
          email: diputado['correo_electronico'],
          substitute: "#{diputado['suplente_nombre']} #{diputado['suplente_apellido']}",
          election_type: diputado['tipo_de_eleccion'],
          circumscription: diputado['circunscripcion'],
          legislature: legislatura
        )
      end
    end
  end
  
  desc "Legislatura LXII"
  task :update => [:environment] do
    Representative.transaction do
      legislatura = Legislature.find_by_name('Legislatura LXII')
      CSV.foreach('doc/diputados-27-sep.csv', :headers => true) do |diputado|
        region = Region.find_by_name(diputado['entidad'])
        partido = PoliticalParty.find_by_name(diputado['partido'])
        rep = Representative.find_by_name("#{diputado['nombre']} #{diputado['apellidos']}")
        puts "#{diputado.inspect}"
        if rep
          rep.update_attributes({
            position: 'Diputado',
            region: region,
            biography: diputado['bio'],
            twitter: diputado['twitter'],
            political_party: partido,
            district: diputado['distrito'],
            phone: "#{diputado['telefono']} EXT. #{diputado['extension']}",
            email: diputado['correo_electronico'],
            substitute: "#{diputado['suplente_nombre']} #{diputado['suplente_apellido']}",
            election_type: diputado['tipo_de_eleccion'],
            circumscription: diputado['circunscripcion'],
          }) 
          puts "REPRESENTANTE ACTUALIZADO #{diputado['nombre']} #{diputado['apellidos']} - #{diputado['correo_electronico']}"
        else
          puts "REPRESENTANTE NO ACTUALIZADO #{diputado['nombre']} #{diputado['apellidos']}"
        end
      end
    end
  end

  namespace :LXII do
    desc "Fotos Legislatura LXII"
    task :fotos => [:environment] do
      dip_subidos = []
      dip_no_subidos = []
      LEGISLATURA_LXII_IDS.each do |diputado_id|
        puts "===================================="
        url = "http://sil.gobernacion.gob.mx/Librerias/pp_PerfilLegislador.php?SID=&Referencia=#{diputado_id}"
        doc = Nokogiri::HTML(open(url))
        puts "Pagina #{url} scrapeada"
        if doc
          nombre = doc.at_css('td.tddatosazul b').text.split(',')
          nombre = "#{nombre[1].strip} #{nombre[0].strip}"
          dip_no_subidos << nombre
          puts "Diputado -> |#{nombre}|"
          diputado = RepresentativeSearch.new({name: nombre}).representatives
          diputado = (diputado.size == 1) ? diputado.first : nil
          if diputado
            imagen = doc.at_css('img[title="Foto del Legislador"]').attributes['src'].to_s
            imagen = "http://sil.gobernacion.gob.mx#{imagen}"
            puts "Foto -> #{imagen}"
            unless imagen == 'http://sil.gobernacion.gob.mx/Archivos/Fotos/fotoNoDisponible.jpg'
              diputado.remote_avatar_url = imagen
              diputado.save!
              puts "Foto subida!!!!"
              dip_subidos << nombre
            end
          end
        end

      end
      puts "===================================="
      puts dip_subidos.join(', ')
      puts "#{dip_subidos.size} fotos subidas"
      puts "===================================="
      dip_no_subidos = dip_no_subidos - dip_subidos
      puts dip_no_subidos.join(', ')
      puts "#{dip_no_subidos.size} fotos subidas"
    end
  end
end